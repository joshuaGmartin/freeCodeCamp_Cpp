#include <iostream>

int main()
{
    // =============================================================================
    // Declare
    // =============================================================================
    std::cout << "===================== Declare =====================" << std::endl;

    bool a{true};
    // bool a{false};

    // bool b{true};
    bool b{false};

    bool c{true};
    // bool c{false};

    std::cout << std::boolalpha;
    std::cout << "a: " << a << std::endl;
    std::cout << "b: " << b << std::endl;
    std::cout << "c: " << c << std::endl;

    // =============================================================================
    // AND
    // =============================================================================
    std::cout << "===================== AND =====================" << std::endl;

    std::cout << "a && b: " << (a && b) << std::endl;
    std::cout << "a && c: " << (a && c) << std::endl;
    std::cout << "a && b && c: " << (a && b && c) << std::endl; // any false makes entire expression false

    // =============================================================================
    // OR
    // =============================================================================
    std::cout << "===================== OR =====================" << std::endl;

    std::cout << "a || b: " << (a || b) << std::endl;
    std::cout << "a || c: " << (a || c) << std::endl;
    std::cout << "a || b || c: " << (a || b || c) << std::endl; // only need one true. Same as ((a or b) or c)

    // =============================================================================
    // NOT
    // =============================================================================
    std::cout << "===================== NOT =====================" << std::endl;

    std::cout << "!a: " << !a << std::endl;
    std::cout << "!b: " << !b << std::endl;
    std::cout << "!c: " << !c << std::endl;

    // =============================================================================
    // Combo
    // =============================================================================
    std::cout << "===================== Combo =====================" << std::endl;

    std::cout << "!(a && b) || c: " << (!(a && b) || c) << std::endl;

    // =============================================================================
    // With Relational
    // =============================================================================

    int d{45};
    int e{20};
    int f{11};

    std::cout << "===================== Declare =====================" << std::endl;
    std::cout << "d: " << d << std::endl;
    std::cout << "e: " << e << std::endl;
    std::cout << "f: " << f << std::endl;

    std::cout << "===================== Logical with Relational =====================" << std::endl;
    std::cout << "(d > e) && (d > f): " << ((d > e) && (d > f)) << std::endl; // true
    std::cout << "(d==e) || (e <= f ): " << ((d == e) || (e <= f)) << std::endl;
    std::cout << "(d < e) || (d > f): " << ((d < e) || (d > f)) << std::endl;
    std::cout << "(f > e) || (d < f): " << ((f > e) || (d < f)) << std::endl;
    std::cout << "(d > f) && (f <= d): " << ((d > f) && (f <= d)) << std::endl;
    std::cout << "(d > e) && (d <= f): " << ((d > e) && (d <= f)) << std::endl;
    std::cout << "(! a) && (d == e): " << ((!a) && (d == e)) << std::endl;
    std::cout << "(! a) && (d == e): " << ((!a) && (d == e)) << std::endl;

    return 0;
}
